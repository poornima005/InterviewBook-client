{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\AmanTanwar\\\\Desktop\\\\react\\\\InterviewBook-frontend\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js??ref--6-oneOf-2!C:\\\\Users\\\\AmanTanwar\\\\Desktop\\\\react\\\\InterviewBook-frontend\\\\node_modules\\\\dompurify\\\\dist\\\\purify.js\"],\"names\":[\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_setPrototypeOf\",\"o\",\"p\",\"Object\",\"setPrototypeOf\",\"__proto__\",\"_construct\",\"Parent\",\"args\",\"Class\",\"Reflect\",\"construct\",\"sham\",\"Proxy\",\"Boolean\",\"valueOf\",\"call\",\"e\",\"_isNativeReflectConstruct\",\"a\",\"push\",\"apply\",\"Constructor\",\"Function\",\"bind\",\"instance\",\"arguments\",\"_toConsumableArray\",\"arr\",\"Array\",\"isArray\",\"_arrayLikeToArray\",\"_arrayWithoutHoles\",\"iter\",\"from\",\"_iterableToArray\",\"minLen\",\"n\",\"toString\",\"slice\",\"name\",\"test\",\"_unsupportedIterableToArray\",\"TypeError\",\"_nonIterableSpread\",\"len\",\"length\",\"i\",\"arr2\",\"hasOwnProperty\",\"isFrozen\",\"getPrototypeOf\",\"getOwnPropertyDescriptor\",\"freeze\",\"seal\",\"create\",\"_ref\",\"fun\",\"thisValue\",\"x\",\"Func\",\"func\",\"arrayForEach\",\"unapply\",\"forEach\",\"arrayPop\",\"pop\",\"arrayPush\",\"stringToLowerCase\",\"String\",\"toLowerCase\",\"stringToString\",\"stringMatch\",\"match\",\"stringReplace\",\"replace\",\"stringIndexOf\",\"indexOf\",\"stringTrim\",\"trim\",\"regExpTest\",\"RegExp\",\"typeErrorCreate\",\"_len2\",\"_key2\",\"thisArg\",\"_len\",\"_key\",\"addToSet\",\"set\",\"array\",\"transformCaseFunc\",\"_transformCaseFunc\",\"l\",\"element\",\"lcElement\",\"clone\",\"object\",\"property\",\"newObject\",\"lookupGetter\",\"prop\",\"desc\",\"get\",\"value\",\"console\",\"warn\",\"html$1\",\"svg$1\",\"svgFilters\",\"svgDisallowed\",\"mathMl$1\",\"mathMlDisallowed\",\"text\",\"html\",\"svg\",\"mathMl\",\"xml\",\"MUSTACHE_EXPR\",\"ERB_EXPR\",\"TMPLIT_EXPR\",\"DATA_ATTR\",\"ARIA_ATTR\",\"IS_ALLOWED_URI\",\"IS_SCRIPT_OR_DATA\",\"ATTR_WHITESPACE\",\"DOCTYPE_NAME\",\"getGlobal\",\"window\",\"_createTrustedTypesPolicy\",\"trustedTypes\",\"document\",\"createPolicy\",\"suffix\",\"currentScript\",\"hasAttribute\",\"getAttribute\",\"policyName\",\"createHTML\",\"createScriptURL\",\"scriptUrl\",\"_\",\"createDOMPurify\",\"undefined\",\"DOMPurify\",\"root\",\"version\",\"removed\",\"nodeType\",\"isSupported\",\"originalDocument\",\"DocumentFragment\",\"HTMLTemplateElement\",\"Node\",\"Element\",\"NodeFilter\",\"_window$NamedNodeMap\",\"NamedNodeMap\",\"MozNamedAttrMap\",\"HTMLFormElement\",\"DOMParser\",\"ElementPrototype\",\"cloneNode\",\"getNextSibling\",\"getChildNodes\",\"getParentNode\",\"template\",\"createElement\",\"content\",\"ownerDocument\",\"trustedTypesPolicy\",\"emptyHTML\",\"_document\",\"implementation\",\"createNodeIterator\",\"createDocumentFragment\",\"getElementsByTagName\",\"importNode\",\"documentMode\",\"hooks\",\"createHTMLDocument\",\"PARSER_MEDIA_TYPE\",\"MUSTACHE_EXPR$1\",\"ERB_EXPR$1\",\"TMPLIT_EXPR$1\",\"DATA_ATTR$1\",\"ARIA_ATTR$1\",\"IS_SCRIPT_OR_DATA$1\",\"ATTR_WHITESPACE$1\",\"IS_ALLOWED_URI$1\",\"ALLOWED_TAGS\",\"DEFAULT_ALLOWED_TAGS\",\"concat\",\"ALLOWED_ATTR\",\"DEFAULT_ALLOWED_ATTR\",\"CUSTOM_ELEMENT_HANDLING\",\"tagNameCheck\",\"writable\",\"configurable\",\"enumerable\",\"attributeNameCheck\",\"allowCustomizedBuiltInElements\",\"FORBID_TAGS\",\"FORBID_ATTR\",\"ALLOW_ARIA_ATTR\",\"ALLOW_DATA_ATTR\",\"ALLOW_UNKNOWN_PROTOCOLS\",\"ALLOW_SELF_CLOSE_IN_ATTR\",\"SAFE_FOR_TEMPLATES\",\"WHOLE_DOCUMENT\",\"SET_CONFIG\",\"FORCE_BODY\",\"RETURN_DOM\",\"RETURN_DOM_FRAGMENT\",\"RETURN_TRUSTED_TYPE\",\"SANITIZE_DOM\",\"SANITIZE_NAMED_PROPS\",\"KEEP_CONTENT\",\"IN_PLACE\",\"USE_PROFILES\",\"FORBID_CONTENTS\",\"DEFAULT_FORBID_CONTENTS\",\"DATA_URI_TAGS\",\"DEFAULT_DATA_URI_TAGS\",\"URI_SAFE_ATTRIBUTES\",\"DEFAULT_URI_SAFE_ATTRIBUTES\",\"MATHML_NAMESPACE\",\"SVG_NAMESPACE\",\"HTML_NAMESPACE\",\"NAMESPACE\",\"IS_EMPTY_INPUT\",\"ALLOWED_NAMESPACES\",\"DEFAULT_ALLOWED_NAMESPACES\",\"SUPPORTED_PARSER_MEDIA_TYPES\",\"CONFIG\",\"formElement\",\"isRegexOrFunction\",\"testValue\",\"_parseConfig\",\"cfg\",\"ADD_URI_SAFE_ATTR\",\"ADD_DATA_URI_TAGS\",\"ALLOWED_URI_REGEXP\",\"ADD_TAGS\",\"ADD_ATTR\",\"table\",\"tbody\",\"MATHML_TEXT_INTEGRATION_POINTS\",\"HTML_INTEGRATION_POINTS\",\"COMMON_SVG_AND_HTML_ELEMENTS\",\"ALL_SVG_TAGS\",\"ALL_MATHML_TAGS\",\"_forceRemove\",\"node\",\"parentNode\",\"removeChild\",\"outerHTML\",\"remove\",\"_removeAttribute\",\"attribute\",\"getAttributeNode\",\"removeAttribute\",\"setAttribute\",\"_initDocument\",\"dirty\",\"doc\",\"leadingWhitespace\",\"matches\",\"dirtyPayload\",\"parseFromString\",\"documentElement\",\"createDocument\",\"innerHTML\",\"body\",\"insertBefore\",\"createTextNode\",\"childNodes\",\"_createIterator\",\"SHOW_ELEMENT\",\"SHOW_COMMENT\",\"SHOW_TEXT\",\"_isNode\",\"nodeName\",\"_executeHook\",\"entryPoint\",\"currentNode\",\"data\",\"hook\",\"_sanitizeElements\",\"elm\",\"textContent\",\"attributes\",\"namespaceURI\",\"hasChildNodes\",\"tagName\",\"allowedTags\",\"firstElementChild\",\"_basicCustomElementTest\",\"childCount\",\"parent\",\"parentTagName\",\"_checkValidNamespace\",\"_isValidAttribute\",\"lcTag\",\"lcName\",\"_sanitizeAttributes\",\"attr\",\"hookEvent\",\"attrName\",\"attrValue\",\"keepAttr\",\"allowedAttributes\",\"_attr\",\"forceKeepAttr\",\"getAttributeType\",\"setAttributeNS\",\"_sanitizeShadowDOM\",\"fragment\",\"shadowNode\",\"shadowIterator\",\"nextNode\",\"sanitize\",\"importedNode\",\"oldNode\",\"returnNode\",\"toStaticHTML\",\"appendChild\",\"firstChild\",\"nodeIterator\",\"shadowroot\",\"shadowrootmod\",\"serializedHTML\",\"doctype\",\"setConfig\",\"clearConfig\",\"isValidAttribute\",\"tag\",\"addHook\",\"hookFunction\",\"removeHook\",\"removeHooks\",\"removeAllHooks\",\"factory\"],\"mappings\":\"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\",\"sourcesContent\":[\"/*! @license DOMPurify 2.4.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.7/LICENSE */\\n\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\\n})(this, function () {\\n  'use strict';\\n\\n  function _typeof(obj) {\\n    \\\"@babel/helpers - typeof\\\";\\n\\n    return _typeof = \\\"function\\\" == typeof Symbol && \\\"symbol\\\" == typeof Symbol.iterator ? function (obj) {\\n      return typeof obj;\\n    } : function (obj) {\\n      return obj && \\\"function\\\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n    }, _typeof(obj);\\n  }\\n  function _setPrototypeOf(o, p) {\\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n      o.__proto__ = p;\\n      return o;\\n    };\\n    return _setPrototypeOf(o, p);\\n  }\\n  function _isNativeReflectConstruct() {\\n    if (typeof Reflect === \\\"undefined\\\" || !Reflect.construct) return false;\\n    if (Reflect.construct.sham) return false;\\n    if (typeof Proxy === \\\"function\\\") return true;\\n    try {\\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\\n      return true;\\n    } catch (e) {\\n      return false;\\n    }\\n  }\\n  function _construct(Parent, args, Class) {\\n    if (_isNativeReflectConstruct()) {\\n      _construct = Reflect.construct;\\n    } else {\\n      _construct = function _construct(Parent, args, Class) {\\n        var a = [null];\\n        a.push.apply(a, args);\\n        var Constructor = Function.bind.apply(Parent, a);\\n        var instance = new Constructor();\\n        if (Class) _setPrototypeOf(instance, Class.prototype);\\n        return instance;\\n      };\\n    }\\n    return _construct.apply(null, arguments);\\n  }\\n  function _toConsumableArray(arr) {\\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\\n  }\\n  function _arrayWithoutHoles(arr) {\\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\\n  }\\n  function _iterableToArray(iter) {\\n    if (typeof Symbol !== \\\"undefined\\\" && iter[Symbol.iterator] != null || iter[\\\"@@iterator\\\"] != null) return Array.from(iter);\\n  }\\n  function _unsupportedIterableToArray(o, minLen) {\\n    if (!o) return;\\n    if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen);\\n    var n = Object.prototype.toString.call(o).slice(8, -1);\\n    if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name;\\n    if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o);\\n    if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\\n  }\\n  function _arrayLikeToArray(arr, len) {\\n    if (len == null || len > arr.length) len = arr.length;\\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\\n    return arr2;\\n  }\\n  function _nonIterableSpread() {\\n    throw new TypeError(\\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\");\\n  }\\n  var hasOwnProperty = Object.hasOwnProperty,\\n    setPrototypeOf = Object.setPrototypeOf,\\n    isFrozen = Object.isFrozen,\\n    getPrototypeOf = Object.getPrototypeOf,\\n    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\n  var freeze = Object.freeze,\\n    seal = Object.seal,\\n    create = Object.create; // eslint-disable-line import/no-mutable-exports\\n\\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\\n    apply = _ref.apply,\\n    construct = _ref.construct;\\n  if (!apply) {\\n    apply = function apply(fun, thisValue, args) {\\n      return fun.apply(thisValue, args);\\n    };\\n  }\\n  if (!freeze) {\\n    freeze = function freeze(x) {\\n      return x;\\n    };\\n  }\\n  if (!seal) {\\n    seal = function seal(x) {\\n      return x;\\n    };\\n  }\\n  if (!construct) {\\n    construct = function construct(Func, args) {\\n      return _construct(Func, _toConsumableArray(args));\\n    };\\n  }\\n  var arrayForEach = unapply(Array.prototype.forEach);\\n  var arrayPop = unapply(Array.prototype.pop);\\n  var arrayPush = unapply(Array.prototype.push);\\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\\n  var stringToString = unapply(String.prototype.toString);\\n  var stringMatch = unapply(String.prototype.match);\\n  var stringReplace = unapply(String.prototype.replace);\\n  var stringIndexOf = unapply(String.prototype.indexOf);\\n  var stringTrim = unapply(String.prototype.trim);\\n  var regExpTest = unapply(RegExp.prototype.test);\\n  var typeErrorCreate = unconstruct(TypeError);\\n  function unapply(func) {\\n    return function (thisArg) {\\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n        args[_key - 1] = arguments[_key];\\n      }\\n      return apply(func, thisArg, args);\\n    };\\n  }\\n  function unconstruct(func) {\\n    return function () {\\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n        args[_key2] = arguments[_key2];\\n      }\\n      return construct(func, args);\\n    };\\n  }\\n  /* Add properties to a lookup table */\\n\\n  function addToSet(set, array, transformCaseFunc) {\\n    var _transformCaseFunc;\\n    transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\\n    if (setPrototypeOf) {\\n      // Make 'in' and truthy checks like Boolean(set.constructor)\\n      // independent of any properties defined on Object.prototype.\\n      // Prevent prototype setters from intercepting set as a this value.\\n      setPrototypeOf(set, null);\\n    }\\n    var l = array.length;\\n    while (l--) {\\n      var element = array[l];\\n      if (typeof element === 'string') {\\n        var lcElement = transformCaseFunc(element);\\n        if (lcElement !== element) {\\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\\n          if (!isFrozen(array)) {\\n            array[l] = lcElement;\\n          }\\n          element = lcElement;\\n        }\\n      }\\n      set[element] = true;\\n    }\\n    return set;\\n  }\\n  /* Shallow clone an object */\\n\\n  function clone(object) {\\n    var newObject = create(null);\\n    var property;\\n    for (property in object) {\\n      if (apply(hasOwnProperty, object, [property]) === true) {\\n        newObject[property] = object[property];\\n      }\\n    }\\n    return newObject;\\n  }\\n  /* IE10 doesn't support __lookupGetter__ so lets'\\n   * simulate it. It also automatically checks\\n   * if the prop is function or getter and behaves\\n   * accordingly. */\\n\\n  function lookupGetter(object, prop) {\\n    while (object !== null) {\\n      var desc = getOwnPropertyDescriptor(object, prop);\\n      if (desc) {\\n        if (desc.get) {\\n          return unapply(desc.get);\\n        }\\n        if (typeof desc.value === 'function') {\\n          return unapply(desc.value);\\n        }\\n      }\\n      object = getPrototypeOf(object);\\n    }\\n    function fallbackValue(element) {\\n      console.warn('fallback value for', element);\\n      return null;\\n    }\\n    return fallbackValue;\\n  }\\n  var html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\\n\\n  var svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\\n  // We still need to know them so that we can do namespace\\n  // checks properly in case one wants to add them to\\n  // allow-list.\\n\\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\\n  var mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']); // Similarly to SVG, we want to know all MathML elements,\\n  // even those that we disallow by default.\\n\\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\\n  var text = freeze(['#text']);\\n  var html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\\n  var svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\\n  var mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\\n  var MUSTACHE_EXPR = seal(/\\\\{\\\\{[\\\\w\\\\W]*|[\\\\w\\\\W]*\\\\}\\\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\\n\\n  var ERB_EXPR = seal(/<%[\\\\w\\\\W]*|[\\\\w\\\\W]*%>/gm);\\n  var TMPLIT_EXPR = seal(/\\\\${[\\\\w\\\\W]*}/gm);\\n  var DATA_ATTR = seal(/^data-[\\\\-\\\\w.\\\\u00B7-\\\\uFFFF]/); // eslint-disable-line no-useless-escape\\n\\n  var ARIA_ATTR = seal(/^aria-[\\\\-\\\\w]+$/); // eslint-disable-line no-useless-escape\\n\\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\\\-]+(?:[^a-z+.\\\\-:]|$))/i // eslint-disable-line no-useless-escape\\n  );\\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\\\w+script|data):/i);\\n  var ATTR_WHITESPACE = seal(/[\\\\u0000-\\\\u0020\\\\u00A0\\\\u1680\\\\u180E\\\\u2000-\\\\u2029\\\\u205F\\\\u3000]/g // eslint-disable-line no-control-regex\\n  );\\n  var DOCTYPE_NAME = seal(/^html$/i);\\n  var getGlobal = function getGlobal() {\\n    return typeof window === 'undefined' ? null : window;\\n  };\\n  /**\\n   * Creates a no-op policy for internal use only.\\n   * Don't export this function outside this module!\\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\\n   * @param {Document} document The document object (to determine policy name suffix)\\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\\n   * are not supported).\\n   */\\n\\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\\n    if (_typeof(trustedTypes) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\\n      return null;\\n    } // Allow the callers to control the unique policy name\\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\\n    // Policy creation with duplicate names throws in Trusted Types.\\n\\n    var suffix = null;\\n    var ATTR_NAME = 'data-tt-policy-suffix';\\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\\n    }\\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\\n    try {\\n      return trustedTypes.createPolicy(policyName, {\\n        createHTML: function createHTML(html) {\\n          return html;\\n        },\\n        createScriptURL: function createScriptURL(scriptUrl) {\\n          return scriptUrl;\\n        }\\n      });\\n    } catch (_) {\\n      // Policy creation failed (most likely another DOMPurify script has\\n      // already run). Skip creating the policy, as this will only cause errors\\n      // if TT are enforced.\\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\\n      return null;\\n    }\\n  };\\n  function createDOMPurify() {\\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\\n    var DOMPurify = function DOMPurify(root) {\\n      return createDOMPurify(root);\\n    };\\n    /**\\n     * Version label, exposed for easier checks\\n     * if DOMPurify is up to date or not\\n     */\\n\\n    DOMPurify.version = '2.4.7';\\n    /**\\n     * Array of elements that DOMPurify removed during sanitation.\\n     * Empty if nothing was removed.\\n     */\\n\\n    DOMPurify.removed = [];\\n    if (!window || !window.document || window.document.nodeType !== 9) {\\n      // Not running in a browser, provide a factory function\\n      // so that you can pass your own Window\\n      DOMPurify.isSupported = false;\\n      return DOMPurify;\\n    }\\n    var originalDocument = window.document;\\n    var document = window.document;\\n    var DocumentFragment = window.DocumentFragment,\\n      HTMLTemplateElement = window.HTMLTemplateElement,\\n      Node = window.Node,\\n      Element = window.Element,\\n      NodeFilter = window.NodeFilter,\\n      _window$NamedNodeMap = window.NamedNodeMap,\\n      NamedNodeMap = _window$NamedNodeMap === void 0 ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\\n      HTMLFormElement = window.HTMLFormElement,\\n      DOMParser = window.DOMParser,\\n      trustedTypes = window.trustedTypes;\\n    var ElementPrototype = Element.prototype;\\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\\n    // new document created via createHTMLDocument. As per the spec\\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\\n    // a new empty registry is used when creating a template contents owner\\n    // document, so we use that as our parent document to ensure nothing\\n    // is inherited.\\n\\n    if (typeof HTMLTemplateElement === 'function') {\\n      var template = document.createElement('template');\\n      if (template.content && template.content.ownerDocument) {\\n        document = template.content.ownerDocument;\\n      }\\n    }\\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\\n    var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\\n    var _document = document,\\n      implementation = _document.implementation,\\n      createNodeIterator = _document.createNodeIterator,\\n      createDocumentFragment = _document.createDocumentFragment,\\n      getElementsByTagName = _document.getElementsByTagName;\\n    var importNode = originalDocument.importNode;\\n    var documentMode = {};\\n    try {\\n      documentMode = clone(document).documentMode ? document.documentMode : {};\\n    } catch (_) {}\\n    var hooks = {};\\n    /**\\n     * Expose whether this browser supports running the full DOMPurify.\\n     */\\n\\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined && documentMode !== 9;\\n    var MUSTACHE_EXPR$1 = MUSTACHE_EXPR,\\n      ERB_EXPR$1 = ERB_EXPR,\\n      TMPLIT_EXPR$1 = TMPLIT_EXPR,\\n      DATA_ATTR$1 = DATA_ATTR,\\n      ARIA_ATTR$1 = ARIA_ATTR,\\n      IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA,\\n      ATTR_WHITESPACE$1 = ATTR_WHITESPACE;\\n    var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;\\n    /**\\n     * We consider the elements and attributes below to be safe. Ideally\\n     * don't add any new ones but feel free to remove unwanted ones.\\n     */\\n\\n    /* allowed element names */\\n\\n    var ALLOWED_TAGS = null;\\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));\\n    /* Allowed attribute names */\\n\\n    var ALLOWED_ATTR = null;\\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));\\n    /*\\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\\n     */\\n\\n    var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\\n      tagNameCheck: {\\n        writable: true,\\n        configurable: false,\\n        enumerable: true,\\n        value: null\\n      },\\n      attributeNameCheck: {\\n        writable: true,\\n        configurable: false,\\n        enumerable: true,\\n        value: null\\n      },\\n      allowCustomizedBuiltInElements: {\\n        writable: true,\\n        configurable: false,\\n        enumerable: true,\\n        value: false\\n      }\\n    }));\\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\\n\\n    var FORBID_TAGS = null;\\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\\n\\n    var FORBID_ATTR = null;\\n    /* Decide if ARIA attributes are okay */\\n\\n    var ALLOW_ARIA_ATTR = true;\\n    /* Decide if custom data attributes are okay */\\n\\n    var ALLOW_DATA_ATTR = true;\\n    /* Decide if unknown protocols are okay */\\n\\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\\n    /* Decide if self-closing tags in attributes are allowed.\\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\\n\\n    var ALLOW_SELF_CLOSE_IN_ATTR = true;\\n    /* Output should be safe for common template engines.\\n     * This means, DOMPurify removes data attributes, mustaches and ERB\\n     */\\n\\n    var SAFE_FOR_TEMPLATES = false;\\n    /* Decide if document with <html>... should be returned */\\n\\n    var WHOLE_DOCUMENT = false;\\n    /* Track whether config is already set on this instance of DOMPurify. */\\n\\n    var SET_CONFIG = false;\\n    /* Decide if all elements (e.g. style, script) must be children of\\n     * document.body. By default, browsers might move them to document.head */\\n\\n    var FORCE_BODY = false;\\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\\n     * string (or a TrustedHTML object if Trusted Types are supported).\\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\\n     */\\n\\n    var RETURN_DOM = false;\\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\\n\\n    var RETURN_DOM_FRAGMENT = false;\\n    /* Try to return a Trusted Type object instead of a string, return a string in\\n     * case Trusted Types are not supported  */\\n\\n    var RETURN_TRUSTED_TYPE = false;\\n    /* Output should be free from DOM clobbering attacks?\\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\\n     */\\n\\n    var SANITIZE_DOM = true;\\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\\n     *\\n     * HTML/DOM spec rules that enable DOM Clobbering:\\n     *   - Named Access on Window (§7.3.3)\\n     *   - DOM Tree Accessors (§3.1.5)\\n     *   - Form Element Parent-Child Relations (§4.10.3)\\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\\n     *   - HTMLCollection (§4.2.10.2)\\n     *\\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\\n     * with a constant string, i.e., `user-content-`\\n     */\\n\\n    var SANITIZE_NAMED_PROPS = false;\\n    var SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\\n    /* Keep element content when removing element? */\\n\\n    var KEEP_CONTENT = true;\\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\\n     * of importing it into a new Document and returning a sanitized copy */\\n\\n    var IN_PLACE = false;\\n    /* Allow usage of profiles like html, svg and mathMl */\\n\\n    var USE_PROFILES = {};\\n    /* Tags to ignore content of when KEEP_CONTENT is true */\\n\\n    var FORBID_CONTENTS = null;\\n    var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\\n    /* Tags that are safe for data: URIs */\\n\\n    var DATA_URI_TAGS = null;\\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\\n    /* Attributes safe for values like \\\"javascript:\\\" */\\n\\n    var URI_SAFE_ATTRIBUTES = null;\\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\\n    /* Document namespace */\\n\\n    var NAMESPACE = HTML_NAMESPACE;\\n    var IS_EMPTY_INPUT = false;\\n    /* Allowed XHTML+XML namespaces */\\n\\n    var ALLOWED_NAMESPACES = null;\\n    var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\\n    /* Parsing of strict XHTML documents */\\n\\n    var PARSER_MEDIA_TYPE;\\n    var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\\n    var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\\n    var transformCaseFunc;\\n    /* Keep a reference to config to pass to hooks */\\n\\n    var CONFIG = null;\\n    /* Ideally, do not touch anything below this line */\\n\\n    /* ______________________________________________ */\\n\\n    var formElement = document.createElement('form');\\n    var isRegexOrFunction = function isRegexOrFunction(testValue) {\\n      return testValue instanceof RegExp || testValue instanceof Function;\\n    };\\n    /**\\n     * _parseConfig\\n     *\\n     * @param  {Object} cfg optional config literal\\n     */\\n    // eslint-disable-next-line complexity\\n\\n    var _parseConfig = function _parseConfig(cfg) {\\n      if (CONFIG && CONFIG === cfg) {\\n        return;\\n      }\\n      /* Shield configuration object from tampering */\\n\\n      if (!cfg || _typeof(cfg) !== 'object') {\\n        cfg = {};\\n      }\\n      /* Shield configuration object from prototype pollution */\\n\\n      cfg = clone(cfg);\\n      PARSER_MEDIA_TYPE =\\n      // eslint-disable-next-line unicorn/prefer-includes\\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\\n\\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\\n      /* Set configuration parameters */\\n\\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\\n      // eslint-disable-line indent\\n      cfg.ADD_URI_SAFE_ATTR,\\n      // eslint-disable-line indent\\n      transformCaseFunc // eslint-disable-line indent\\n      ) // eslint-disable-line indent\\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\\n      // eslint-disable-line indent\\n      cfg.ADD_DATA_URI_TAGS,\\n      // eslint-disable-line indent\\n      transformCaseFunc // eslint-disable-line indent\\n      ) // eslint-disable-line indent\\n      : DEFAULT_DATA_URI_TAGS;\\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\\n\\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\\n\\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\\n\\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\\n\\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\\n\\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\\n\\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\\n\\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\\n\\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\\n\\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\\n\\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\\n\\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\\n\\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\\n\\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\\n\\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;\\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\\n      }\\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\\n      }\\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\\n      }\\n      if (SAFE_FOR_TEMPLATES) {\\n        ALLOW_DATA_ATTR = false;\\n      }\\n      if (RETURN_DOM_FRAGMENT) {\\n        RETURN_DOM = true;\\n      }\\n      /* Parse profile info */\\n\\n      if (USE_PROFILES) {\\n        ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));\\n        ALLOWED_ATTR = [];\\n        if (USE_PROFILES.html === true) {\\n          addToSet(ALLOWED_TAGS, html$1);\\n          addToSet(ALLOWED_ATTR, html);\\n        }\\n        if (USE_PROFILES.svg === true) {\\n          addToSet(ALLOWED_TAGS, svg$1);\\n          addToSet(ALLOWED_ATTR, svg);\\n          addToSet(ALLOWED_ATTR, xml);\\n        }\\n        if (USE_PROFILES.svgFilters === true) {\\n          addToSet(ALLOWED_TAGS, svgFilters);\\n          addToSet(ALLOWED_ATTR, svg);\\n          addToSet(ALLOWED_ATTR, xml);\\n        }\\n        if (USE_PROFILES.mathMl === true) {\\n          addToSet(ALLOWED_TAGS, mathMl$1);\\n          addToSet(ALLOWED_ATTR, mathMl);\\n          addToSet(ALLOWED_ATTR, xml);\\n        }\\n      }\\n      /* Merge configuration parameters */\\n\\n      if (cfg.ADD_TAGS) {\\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\\n        }\\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\\n      }\\n      if (cfg.ADD_ATTR) {\\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\\n        }\\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\\n      }\\n      if (cfg.ADD_URI_SAFE_ATTR) {\\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\\n      }\\n      if (cfg.FORBID_CONTENTS) {\\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\\n        }\\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\\n      }\\n      /* Add #text in case KEEP_CONTENT is set to true */\\n\\n      if (KEEP_CONTENT) {\\n        ALLOWED_TAGS['#text'] = true;\\n      }\\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\\n\\n      if (WHOLE_DOCUMENT) {\\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\\n      }\\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\\n\\n      if (ALLOWED_TAGS.table) {\\n        addToSet(ALLOWED_TAGS, ['tbody']);\\n        delete FORBID_TAGS.tbody;\\n      } // Prevent further manipulation of configuration.\\n      // Not available in IE8, Safari 5, etc.\\n\\n      if (freeze) {\\n        freeze(cfg);\\n      }\\n      CONFIG = cfg;\\n    };\\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\\n    // namespace. We need to specify them explicitly\\n    // so that they don't get erroneously deleted from\\n    // HTML namespace.\\n\\n    var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\\n    /* Keep track of all possible SVG and MathML tags\\n     * so that we can perform the namespace checks\\n     * correctly. */\\n\\n    var ALL_SVG_TAGS = addToSet({}, svg$1);\\n    addToSet(ALL_SVG_TAGS, svgFilters);\\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\\n    var ALL_MATHML_TAGS = addToSet({}, mathMl$1);\\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\\n    /**\\n     *\\n     *\\n     * @param  {Element} element a DOM element whose namespace is being checked\\n     * @returns {boolean} Return false if the element has a\\n     *  namespace that a spec-compliant parser would never\\n     *  return. Return true otherwise.\\n     */\\n\\n    var _checkValidNamespace = function _checkValidNamespace(element) {\\n      var parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\\n      // can be null. We just simulate parent in this case.\\n\\n      if (!parent || !parent.tagName) {\\n        parent = {\\n          namespaceURI: NAMESPACE,\\n          tagName: 'template'\\n        };\\n      }\\n      var tagName = stringToLowerCase(element.tagName);\\n      var parentTagName = stringToLowerCase(parent.tagName);\\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\\n        return false;\\n      }\\n      if (element.namespaceURI === SVG_NAMESPACE) {\\n        // The only way to switch from HTML namespace to SVG\\n        // is via <svg>. If it happens via any other tag, then\\n        // it should be killed.\\n        if (parent.namespaceURI === HTML_NAMESPACE) {\\n          return tagName === 'svg';\\n        } // The only way to switch from MathML to SVG is via`\\n        // svg if parent is either <annotation-xml> or MathML\\n        // text integration points.\\n\\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\\n        } // We only allow elements that are defined in SVG\\n        // spec. All others are disallowed in SVG namespace.\\n\\n        return Boolean(ALL_SVG_TAGS[tagName]);\\n      }\\n      if (element.namespaceURI === MATHML_NAMESPACE) {\\n        // The only way to switch from HTML namespace to MathML\\n        // is via <math>. If it happens via any other tag, then\\n        // it should be killed.\\n        if (parent.namespaceURI === HTML_NAMESPACE) {\\n          return tagName === 'math';\\n        } // The only way to switch from SVG to MathML is via\\n        // <math> and HTML integration points\\n\\n        if (parent.namespaceURI === SVG_NAMESPACE) {\\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\\n        } // We only allow elements that are defined in MathML\\n        // spec. All others are disallowed in MathML namespace.\\n\\n        return Boolean(ALL_MATHML_TAGS[tagName]);\\n      }\\n      if (element.namespaceURI === HTML_NAMESPACE) {\\n        // The only way to switch from SVG to HTML is via\\n        // HTML integration points, and from MathML to HTML\\n        // is via MathML text integration points\\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\\n          return false;\\n        }\\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\\n          return false;\\n        } // We disallow tags that are specific for MathML\\n        // or SVG and should never appear in HTML namespace\\n\\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\\n      } // For XHTML and XML documents that support custom namespaces\\n\\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\\n        return true;\\n      } // The code should never reach this place (this means\\n      // that the element somehow got namespace that is not\\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\\n      // Return false just in case.\\n\\n      return false;\\n    };\\n    /**\\n     * _forceRemove\\n     *\\n     * @param  {Node} node a DOM node\\n     */\\n\\n    var _forceRemove = function _forceRemove(node) {\\n      arrayPush(DOMPurify.removed, {\\n        element: node\\n      });\\n      try {\\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\\n        node.parentNode.removeChild(node);\\n      } catch (_) {\\n        try {\\n          node.outerHTML = emptyHTML;\\n        } catch (_) {\\n          node.remove();\\n        }\\n      }\\n    };\\n    /**\\n     * _removeAttribute\\n     *\\n     * @param  {String} name an Attribute name\\n     * @param  {Node} node a DOM node\\n     */\\n\\n    var _removeAttribute = function _removeAttribute(name, node) {\\n      try {\\n        arrayPush(DOMPurify.removed, {\\n          attribute: node.getAttributeNode(name),\\n          from: node\\n        });\\n      } catch (_) {\\n        arrayPush(DOMPurify.removed, {\\n          attribute: null,\\n          from: node\\n        });\\n      }\\n      node.removeAttribute(name); // We void attribute values for unremovable \\\"is\\\"\\\" attributes\\n\\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\\n          try {\\n            _forceRemove(node);\\n          } catch (_) {}\\n        } else {\\n          try {\\n            node.setAttribute(name, '');\\n          } catch (_) {}\\n        }\\n      }\\n    };\\n    /**\\n     * _initDocument\\n     *\\n     * @param  {String} dirty a string of dirty markup\\n     * @return {Document} a DOM, filled with the dirty markup\\n     */\\n\\n    var _initDocument = function _initDocument(dirty) {\\n      /* Create a HTML document */\\n      var doc;\\n      var leadingWhitespace;\\n      if (FORCE_BODY) {\\n        dirty = '<remove></remove>' + dirty;\\n      } else {\\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\\n        var matches = stringMatch(dirty, /^[\\\\r\\\\n\\\\t ]+/);\\n        leadingWhitespace = matches && matches[0];\\n      }\\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\\n        dirty = '<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><head></head><body>' + dirty + '</body></html>';\\n      }\\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\\n      /*\\n       * Use the DOMParser API by default, fallback later if needs be\\n       * DOMParser not work for svg when has multiple root element.\\n       */\\n\\n      if (NAMESPACE === HTML_NAMESPACE) {\\n        try {\\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\\n        } catch (_) {}\\n      }\\n      /* Use createHTMLDocument in case DOMParser is not available */\\n\\n      if (!doc || !doc.documentElement) {\\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\\n        try {\\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\\n        }\\n      }\\n      var body = doc.body || doc.documentElement;\\n      if (dirty && leadingWhitespace) {\\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\\n      }\\n      /* Work on whole document or just its body */\\n\\n      if (NAMESPACE === HTML_NAMESPACE) {\\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\\n      }\\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\\n    };\\n    /**\\n     * _createIterator\\n     *\\n     * @param  {Document} root document/fragment to create iterator for\\n     * @return {Iterator} iterator instance\\n     */\\n\\n    var _createIterator = function _createIterator(root) {\\n      return createNodeIterator.call(root.ownerDocument || root, root,\\n      // eslint-disable-next-line no-bitwise\\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\\n    };\\n    /**\\n     * _isClobbered\\n     *\\n     * @param  {Node} elm element to check for clobbering attacks\\n     * @return {Boolean} true if clobbered, false if safe\\n     */\\n\\n    var _isClobbered = function _isClobbered(elm) {\\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\\n    };\\n    /**\\n     * _isNode\\n     *\\n     * @param  {Node} obj object to check whether it's a DOM node\\n     * @return {Boolean} true is object is a DOM node\\n     */\\n\\n    var _isNode = function _isNode(object) {\\n      return _typeof(Node) === 'object' ? object instanceof Node : object && _typeof(object) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\\n    };\\n    /**\\n     * _executeHook\\n     * Execute user configurable hooks\\n     *\\n     * @param  {String} entryPoint  Name of the hook's entry point\\n     * @param  {Node} currentNode node to work on with the hook\\n     * @param  {Object} data additional hook parameters\\n     */\\n\\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\\n      if (!hooks[entryPoint]) {\\n        return;\\n      }\\n      arrayForEach(hooks[entryPoint], function (hook) {\\n        hook.call(DOMPurify, currentNode, data, CONFIG);\\n      });\\n    };\\n    /**\\n     * _sanitizeElements\\n     *\\n     * @protect nodeName\\n     * @protect textContent\\n     * @protect removeChild\\n     *\\n     * @param   {Node} currentNode to check for permission to exist\\n     * @return  {Boolean} true if node was killed, false if left alive\\n     */\\n\\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\\n      var content;\\n      /* Execute a hook if present */\\n\\n      _executeHook('beforeSanitizeElements', currentNode, null);\\n      /* Check if element is clobbered or can clobber */\\n\\n      if (_isClobbered(currentNode)) {\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Check if tagname contains Unicode */\\n\\n      if (regExpTest(/[\\\\u0080-\\\\uFFFF]/, currentNode.nodeName)) {\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Now let's check the element's type and name */\\n\\n      var tagName = transformCaseFunc(currentNode.nodeName);\\n      /* Execute a hook if present */\\n\\n      _executeHook('uponSanitizeElement', currentNode, {\\n        tagName: tagName,\\n        allowedTags: ALLOWED_TAGS\\n      });\\n      /* Detect mXSS attempts abusing namespace confusion */\\n\\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\\\w]/g, currentNode.textContent)) {\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Mitigate a problem with templates inside select */\\n\\n      if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Remove element if anything forbids its presence */\\n\\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\\n        /* Check if we have a custom element to handle */\\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\\n        }\\n        /* Keep content except for bad-listed elements */\\n\\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\\n          if (childNodes && parentNode) {\\n            var childCount = childNodes.length;\\n            for (var i = childCount - 1; i >= 0; --i) {\\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\\n            }\\n          }\\n        }\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Check whether element has a valid namespace */\\n\\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Make sure that older browsers don't get fallback-tag mXSS */\\n\\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\\n        _forceRemove(currentNode);\\n        return true;\\n      }\\n      /* Sanitize element content to be template-safe */\\n\\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\\n        /* Get the element's text content */\\n        content = currentNode.textContent;\\n        content = stringReplace(content, MUSTACHE_EXPR$1, ' ');\\n        content = stringReplace(content, ERB_EXPR$1, ' ');\\n        content = stringReplace(content, TMPLIT_EXPR$1, ' ');\\n        if (currentNode.textContent !== content) {\\n          arrayPush(DOMPurify.removed, {\\n            element: currentNode.cloneNode()\\n          });\\n          currentNode.textContent = content;\\n        }\\n      }\\n      /* Execute a hook if present */\\n\\n      _executeHook('afterSanitizeElements', currentNode, null);\\n      return false;\\n    };\\n    /**\\n     * _isValidAttribute\\n     *\\n     * @param  {string} lcTag Lowercase tag name of containing element.\\n     * @param  {string} lcName Lowercase attribute name.\\n     * @param  {string} value Attribute value.\\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\\n     */\\n    // eslint-disable-next-line complexity\\n\\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\\n      /* Make sure attribute cannot clobber */\\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\\n        return false;\\n      }\\n      /* Allow valid data-* attributes: At least one character after \\\"-\\\"\\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\\n          We don't need to check the value; it's always URI safe. */\\n\\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName)) ;else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName)) ;else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\\n        if (\\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\\n        // Alternative, second condition checks if it's an `is`-attribute, AND\\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ;else {\\n          return false;\\n        }\\n        /* Check value is safe. First, is attr inert? If so, is safe */\\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ;else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ;else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ;else if (value) {\\n        return false;\\n      } else ;\\n      return true;\\n    };\\n    /**\\n     * _basicCustomElementCheck\\n     * checks if at least one dash is included in tagName, and it's not the first char\\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\\n     * @param {string} tagName name of the tag of the node to sanitize\\n     */\\n\\n    var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\\n      return tagName.indexOf('-') > 0;\\n    };\\n    /**\\n     * _sanitizeAttributes\\n     *\\n     * @protect attributes\\n     * @protect nodeName\\n     * @protect removeAttribute\\n     * @protect setAttribute\\n     *\\n     * @param  {Node} currentNode to sanitize\\n     */\\n\\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\\n      var attr;\\n      var value;\\n      var lcName;\\n      var l;\\n      /* Execute a hook if present */\\n\\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\\n      var attributes = currentNode.attributes;\\n      /* Check if we have attributes; if not we might have a text node */\\n\\n      if (!attributes) {\\n        return;\\n      }\\n      var hookEvent = {\\n        attrName: '',\\n        attrValue: '',\\n        keepAttr: true,\\n        allowedAttributes: ALLOWED_ATTR\\n      };\\n      l = attributes.length;\\n      /* Go backwards over all attributes; safely remove bad ones */\\n\\n      while (l--) {\\n        attr = attributes[l];\\n        var _attr = attr,\\n          name = _attr.name,\\n          namespaceURI = _attr.namespaceURI;\\n        value = name === 'value' ? attr.value : stringTrim(attr.value);\\n        lcName = transformCaseFunc(name);\\n        /* Execute a hook if present */\\n\\n        hookEvent.attrName = lcName;\\n        hookEvent.attrValue = value;\\n        hookEvent.keepAttr = true;\\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\\n\\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\\n        value = hookEvent.attrValue;\\n        /* Did the hooks approve of the attribute? */\\n\\n        if (hookEvent.forceKeepAttr) {\\n          continue;\\n        }\\n        /* Remove attribute */\\n\\n        _removeAttribute(name, currentNode);\\n        /* Did the hooks approve of the attribute? */\\n\\n        if (!hookEvent.keepAttr) {\\n          continue;\\n        }\\n        /* Work around a security issue in jQuery 3.0 */\\n\\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\\\/>/i, value)) {\\n          _removeAttribute(name, currentNode);\\n          continue;\\n        }\\n        /* Sanitize attribute content to be template-safe */\\n\\n        if (SAFE_FOR_TEMPLATES) {\\n          value = stringReplace(value, MUSTACHE_EXPR$1, ' ');\\n          value = stringReplace(value, ERB_EXPR$1, ' ');\\n          value = stringReplace(value, TMPLIT_EXPR$1, ' ');\\n        }\\n        /* Is `value` valid for this attribute? */\\n\\n        var lcTag = transformCaseFunc(currentNode.nodeName);\\n        if (!_isValidAttribute(lcTag, lcName, value)) {\\n          continue;\\n        }\\n        /* Full DOM Clobbering protection via namespace isolation,\\n         * Prefix id and name attributes with `user-content-`\\n         */\\n\\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\\n          // Remove the attribute with this value\\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\\n\\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\\n        }\\n        /* Handle attributes that require Trusted Types */\\n\\n        if (trustedTypesPolicy && _typeof(trustedTypes) === 'object' && typeof trustedTypes.getAttributeType === 'function') {\\n          if (namespaceURI) ;else {\\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\\n              case 'TrustedHTML':\\n                {\\n                  value = trustedTypesPolicy.createHTML(value);\\n                  break;\\n                }\\n              case 'TrustedScriptURL':\\n                {\\n                  value = trustedTypesPolicy.createScriptURL(value);\\n                  break;\\n                }\\n            }\\n          }\\n        }\\n        /* Handle invalid data-* attribute set by try-catching it */\\n\\n        try {\\n          if (namespaceURI) {\\n            currentNode.setAttributeNS(namespaceURI, name, value);\\n          } else {\\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \\\"x-schema\\\". */\\n            currentNode.setAttribute(name, value);\\n          }\\n          arrayPop(DOMPurify.removed);\\n        } catch (_) {}\\n      }\\n      /* Execute a hook if present */\\n\\n      _executeHook('afterSanitizeAttributes', currentNode, null);\\n    };\\n    /**\\n     * _sanitizeShadowDOM\\n     *\\n     * @param  {DocumentFragment} fragment to iterate over recursively\\n     */\\n\\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\\n      var shadowNode;\\n      var shadowIterator = _createIterator(fragment);\\n      /* Execute a hook if present */\\n\\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\\n      while (shadowNode = shadowIterator.nextNode()) {\\n        /* Execute a hook if present */\\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\\n        /* Sanitize tags and elements */\\n\\n        if (_sanitizeElements(shadowNode)) {\\n          continue;\\n        }\\n        /* Deep shadow DOM detected */\\n\\n        if (shadowNode.content instanceof DocumentFragment) {\\n          _sanitizeShadowDOM(shadowNode.content);\\n        }\\n        /* Check attributes, sanitize if necessary */\\n\\n        _sanitizeAttributes(shadowNode);\\n      }\\n      /* Execute a hook if present */\\n\\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\\n    };\\n    /**\\n     * Sanitize\\n     * Public method providing core sanitation functionality\\n     *\\n     * @param {String|Node} dirty string or DOM node\\n     * @param {Object} configuration object\\n     */\\n    // eslint-disable-next-line complexity\\n\\n    DOMPurify.sanitize = function (dirty) {\\n      var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n      var body;\\n      var importedNode;\\n      var currentNode;\\n      var oldNode;\\n      var returnNode;\\n      /* Make sure we have a string to sanitize.\\n        DO NOT return early, as this will return the wrong type if\\n        the user has requested a DOM object rather than a string */\\n\\n      IS_EMPTY_INPUT = !dirty;\\n      if (IS_EMPTY_INPUT) {\\n        dirty = '<!-->';\\n      }\\n      /* Stringify, in case dirty is an object */\\n\\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\\n        if (typeof dirty.toString === 'function') {\\n          dirty = dirty.toString();\\n          if (typeof dirty !== 'string') {\\n            throw typeErrorCreate('dirty is not a string, aborting');\\n          }\\n        } else {\\n          throw typeErrorCreate('toString is not a function');\\n        }\\n      }\\n      /* Check we can run. Otherwise fall back or ignore */\\n\\n      if (!DOMPurify.isSupported) {\\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\\n          if (typeof dirty === 'string') {\\n            return window.toStaticHTML(dirty);\\n          }\\n          if (_isNode(dirty)) {\\n            return window.toStaticHTML(dirty.outerHTML);\\n          }\\n        }\\n        return dirty;\\n      }\\n      /* Assign config vars */\\n\\n      if (!SET_CONFIG) {\\n        _parseConfig(cfg);\\n      }\\n      /* Clean up removed elements */\\n\\n      DOMPurify.removed = [];\\n      /* Check if dirty is correctly typed for IN_PLACE */\\n\\n      if (typeof dirty === 'string') {\\n        IN_PLACE = false;\\n      }\\n      if (IN_PLACE) {\\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\\n        if (dirty.nodeName) {\\n          var tagName = transformCaseFunc(dirty.nodeName);\\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\\n          }\\n        }\\n      } else if (dirty instanceof Node) {\\n        /* If dirty is a DOM element, append to an empty document to avoid\\n           elements being stripped by the parser */\\n        body = _initDocument('<!---->');\\n        importedNode = body.ownerDocument.importNode(dirty, true);\\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\\n          /* Node is already a body, use as is */\\n          body = importedNode;\\n        } else if (importedNode.nodeName === 'HTML') {\\n          body = importedNode;\\n        } else {\\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\\n          body.appendChild(importedNode);\\n        }\\n      } else {\\n        /* Exit directly if we have nothing to do */\\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\\n        // eslint-disable-next-line unicorn/prefer-includes\\n        dirty.indexOf('<') === -1) {\\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\\n        }\\n        /* Initialize the document to work on */\\n\\n        body = _initDocument(dirty);\\n        /* Check we have a DOM node from the data */\\n\\n        if (!body) {\\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\\n        }\\n      }\\n      /* Remove first element node (ours) if FORCE_BODY is set */\\n\\n      if (body && FORCE_BODY) {\\n        _forceRemove(body.firstChild);\\n      }\\n      /* Get node iterator */\\n\\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\\n      /* Now start iterating over the created document */\\n\\n      while (currentNode = nodeIterator.nextNode()) {\\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\\n          continue;\\n        }\\n        /* Sanitize tags and elements */\\n\\n        if (_sanitizeElements(currentNode)) {\\n          continue;\\n        }\\n        /* Shadow DOM detected, sanitize it */\\n\\n        if (currentNode.content instanceof DocumentFragment) {\\n          _sanitizeShadowDOM(currentNode.content);\\n        }\\n        /* Check attributes, sanitize if necessary */\\n\\n        _sanitizeAttributes(currentNode);\\n        oldNode = currentNode;\\n      }\\n      oldNode = null;\\n      /* If we sanitized `dirty` in-place, return it. */\\n\\n      if (IN_PLACE) {\\n        return dirty;\\n      }\\n      /* Return sanitized string or DOM */\\n\\n      if (RETURN_DOM) {\\n        if (RETURN_DOM_FRAGMENT) {\\n          returnNode = createDocumentFragment.call(body.ownerDocument);\\n          while (body.firstChild) {\\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\\n            returnNode.appendChild(body.firstChild);\\n          }\\n        } else {\\n          returnNode = body;\\n        }\\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\\n          /*\\n            AdoptNode() is not used because internal state is not reset\\n            (e.g. the past names map of a HTMLFormElement), this is safe\\n            in theory but we would rather not risk another attack vector.\\n            The state that is cloned by importNode() is explicitly defined\\n            by the specs.\\n          */\\n          returnNode = importNode.call(originalDocument, returnNode, true);\\n        }\\n        return returnNode;\\n      }\\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\\n      /* Serialize doctype if allowed */\\n\\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\\\n' + serializedHTML;\\n      }\\n      /* Sanitize final string template-safe */\\n\\n      if (SAFE_FOR_TEMPLATES) {\\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, ' ');\\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, ' ');\\n        serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, ' ');\\n      }\\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\\n    };\\n    /**\\n     * Public method to set the configuration once\\n     * setConfig\\n     *\\n     * @param {Object} cfg configuration object\\n     */\\n\\n    DOMPurify.setConfig = function (cfg) {\\n      _parseConfig(cfg);\\n      SET_CONFIG = true;\\n    };\\n    /**\\n     * Public method to remove the configuration\\n     * clearConfig\\n     *\\n     */\\n\\n    DOMPurify.clearConfig = function () {\\n      CONFIG = null;\\n      SET_CONFIG = false;\\n    };\\n    /**\\n     * Public method to check if an attribute value is valid.\\n     * Uses last set config, if any. Otherwise, uses config defaults.\\n     * isValidAttribute\\n     *\\n     * @param  {string} tag Tag name of containing element.\\n     * @param  {string} attr Attribute name.\\n     * @param  {string} value Attribute value.\\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\\n     */\\n\\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\\n      /* Initialize shared config vars if necessary. */\\n      if (!CONFIG) {\\n        _parseConfig({});\\n      }\\n      var lcTag = transformCaseFunc(tag);\\n      var lcName = transformCaseFunc(attr);\\n      return _isValidAttribute(lcTag, lcName, value);\\n    };\\n    /**\\n     * AddHook\\n     * Public method to add DOMPurify hooks\\n     *\\n     * @param {String} entryPoint entry point for the hook to add\\n     * @param {Function} hookFunction function to execute\\n     */\\n\\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\\n      if (typeof hookFunction !== 'function') {\\n        return;\\n      }\\n      hooks[entryPoint] = hooks[entryPoint] || [];\\n      arrayPush(hooks[entryPoint], hookFunction);\\n    };\\n    /**\\n     * RemoveHook\\n     * Public method to remove a DOMPurify hook at a given entryPoint\\n     * (pops it from the stack of hooks if more are present)\\n     *\\n     * @param {String} entryPoint entry point for the hook to remove\\n     * @return {Function} removed(popped) hook\\n     */\\n\\n    DOMPurify.removeHook = function (entryPoint) {\\n      if (hooks[entryPoint]) {\\n        return arrayPop(hooks[entryPoint]);\\n      }\\n    };\\n    /**\\n     * RemoveHooks\\n     * Public method to remove all DOMPurify hooks at a given entryPoint\\n     *\\n     * @param  {String} entryPoint entry point for the hooks to remove\\n     */\\n\\n    DOMPurify.removeHooks = function (entryPoint) {\\n      if (hooks[entryPoint]) {\\n        hooks[entryPoint] = [];\\n      }\\n    };\\n    /**\\n     * RemoveAllHooks\\n     * Public method to remove all DOMPurify hooks\\n     *\\n     */\\n\\n    DOMPurify.removeAllHooks = function () {\\n      hooks = {};\\n    };\\n    return DOMPurify;\\n  }\\n  var purify = createDOMPurify();\\n  return purify;\\n});\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(e,t,n){e.exports=function(){\"use strict\";function e(t){return(e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(t)}function t(e,n){return(t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,n)}function n(e,r,o){return(n=function(){if(\"undefined\"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,n,r){var o=[null];o.push.apply(o,n);var a=Function.bind.apply(e,o),i=new a;return r&&t(i,r.prototype),i}).apply(null,arguments)}function r(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if(\"undefined\"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(e){if(\"string\"===typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var a=Object.hasOwnProperty,i=Object.setPrototypeOf,l=Object.isFrozen,c=Object.getPrototypeOf,s=Object.getOwnPropertyDescriptor,u=Object.freeze,m=Object.seal,f=Object.create,p=\"undefined\"!==typeof Reflect&&Reflect,d=p.apply,h=p.construct;d||(d=function(e,t,n){return e.apply(t,n)}),u||(u=function(e){return e}),m||(m=function(e){return e}),h||(h=function(e,t){return n(e,r(t))});var g,y=k(Array.prototype.forEach),b=k(Array.prototype.pop),v=k(Array.prototype.push),T=k(String.prototype.toLowerCase),N=k(String.prototype.toString),E=k(String.prototype.match),A=k(String.prototype.replace),w=k(String.prototype.indexOf),S=k(String.prototype.trim),_=k(RegExp.prototype.test),x=(g=TypeError,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return h(g,t)});function k(e){return function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return d(e,t,r)}}function L(e,t,n){var r;n=null!==(r=n)&&void 0!==r?r:T,i&&i(e,null);for(var o=t.length;o--;){var a=t[o];if(\"string\"===typeof a){var c=n(a);c!==a&&(l(t)||(t[o]=c),a=c)}e[a]=!0}return e}function O(e){var t,n=f(null);for(t in e)!0===d(a,e,[t])&&(n[t]=e[t]);return n}function D(e,t){for(;null!==e;){var n=s(e,t);if(n){if(n.get)return k(n.get);if(\"function\"===typeof n.value)return k(n.value)}e=c(e)}return function(e){return console.warn(\"fallback value for\",e),null}}var R=u([\"a\",\"abbr\",\"acronym\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"bdi\",\"bdo\",\"big\",\"blink\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"center\",\"cite\",\"code\",\"col\",\"colgroup\",\"content\",\"data\",\"datalist\",\"dd\",\"decorator\",\"del\",\"details\",\"dfn\",\"dialog\",\"dir\",\"div\",\"dl\",\"dt\",\"element\",\"em\",\"fieldset\",\"figcaption\",\"figure\",\"font\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"img\",\"input\",\"ins\",\"kbd\",\"label\",\"legend\",\"li\",\"main\",\"map\",\"mark\",\"marquee\",\"menu\",\"menuitem\",\"meter\",\"nav\",\"nobr\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"section\",\"select\",\"shadow\",\"small\",\"source\",\"spacer\",\"span\",\"strike\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"template\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\",\"tt\",\"u\",\"ul\",\"var\",\"video\",\"wbr\"]),C=u([\"svg\",\"a\",\"altglyph\",\"altglyphdef\",\"altglyphitem\",\"animatecolor\",\"animatemotion\",\"animatetransform\",\"circle\",\"clippath\",\"defs\",\"desc\",\"ellipse\",\"filter\",\"font\",\"g\",\"glyph\",\"glyphref\",\"hkern\",\"image\",\"line\",\"lineargradient\",\"marker\",\"mask\",\"metadata\",\"mpath\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialgradient\",\"rect\",\"stop\",\"style\",\"switch\",\"symbol\",\"text\",\"textpath\",\"title\",\"tref\",\"tspan\",\"view\",\"vkern\"]),M=u([\"feBlend\",\"feColorMatrix\",\"feComponentTransfer\",\"feComposite\",\"feConvolveMatrix\",\"feDiffuseLighting\",\"feDisplacementMap\",\"feDistantLight\",\"feFlood\",\"feFuncA\",\"feFuncB\",\"feFuncG\",\"feFuncR\",\"feGaussianBlur\",\"feImage\",\"feMerge\",\"feMergeNode\",\"feMorphology\",\"feOffset\",\"fePointLight\",\"feSpecularLighting\",\"feSpotLight\",\"feTile\",\"feTurbulence\"]),I=u([\"animate\",\"color-profile\",\"cursor\",\"discard\",\"fedropshadow\",\"font-face\",\"font-face-format\",\"font-face-name\",\"font-face-src\",\"font-face-uri\",\"foreignobject\",\"hatch\",\"hatchpath\",\"mesh\",\"meshgradient\",\"meshpatch\",\"meshrow\",\"missing-glyph\",\"script\",\"set\",\"solidcolor\",\"unknown\",\"use\"]),F=u([\"math\",\"menclose\",\"merror\",\"mfenced\",\"mfrac\",\"mglyph\",\"mi\",\"mlabeledtr\",\"mmultiscripts\",\"mn\",\"mo\",\"mover\",\"mpadded\",\"mphantom\",\"mroot\",\"mrow\",\"ms\",\"mspace\",\"msqrt\",\"mstyle\",\"msub\",\"msup\",\"msubsup\",\"mtable\",\"mtd\",\"mtext\",\"mtr\",\"munder\",\"munderover\"]),U=u([\"maction\",\"maligngroup\",\"malignmark\",\"mlongdiv\",\"mscarries\",\"mscarry\",\"msgroup\",\"mstack\",\"msline\",\"msrow\",\"semantics\",\"annotation\",\"annotation-xml\",\"mprescripts\",\"none\"]),H=u([\"#text\"]),z=u([\"accept\",\"action\",\"align\",\"alt\",\"autocapitalize\",\"autocomplete\",\"autopictureinpicture\",\"autoplay\",\"background\",\"bgcolor\",\"border\",\"capture\",\"cellpadding\",\"cellspacing\",\"checked\",\"cite\",\"class\",\"clear\",\"color\",\"cols\",\"colspan\",\"controls\",\"controlslist\",\"coords\",\"crossorigin\",\"datetime\",\"decoding\",\"default\",\"dir\",\"disabled\",\"disablepictureinpicture\",\"disableremoteplayback\",\"download\",\"draggable\",\"enctype\",\"enterkeyhint\",\"face\",\"for\",\"headers\",\"height\",\"hidden\",\"high\",\"href\",\"hreflang\",\"id\",\"inputmode\",\"integrity\",\"ismap\",\"kind\",\"label\",\"lang\",\"list\",\"loading\",\"loop\",\"low\",\"max\",\"maxlength\",\"media\",\"method\",\"min\",\"minlength\",\"multiple\",\"muted\",\"name\",\"nonce\",\"noshade\",\"novalidate\",\"nowrap\",\"open\",\"optimum\",\"pattern\",\"placeholder\",\"playsinline\",\"poster\",\"preload\",\"pubdate\",\"radiogroup\",\"readonly\",\"rel\",\"required\",\"rev\",\"reversed\",\"role\",\"rows\",\"rowspan\",\"spellcheck\",\"scope\",\"selected\",\"shape\",\"size\",\"sizes\",\"span\",\"srclang\",\"start\",\"src\",\"srcset\",\"step\",\"style\",\"summary\",\"tabindex\",\"title\",\"translate\",\"type\",\"usemap\",\"valign\",\"value\",\"width\",\"xmlns\",\"slot\"]),P=u([\"accent-height\",\"accumulate\",\"additive\",\"alignment-baseline\",\"ascent\",\"attributename\",\"attributetype\",\"azimuth\",\"basefrequency\",\"baseline-shift\",\"begin\",\"bias\",\"by\",\"class\",\"clip\",\"clippathunits\",\"clip-path\",\"clip-rule\",\"color\",\"color-interpolation\",\"color-interpolation-filters\",\"color-profile\",\"color-rendering\",\"cx\",\"cy\",\"d\",\"dx\",\"dy\",\"diffuseconstant\",\"direction\",\"display\",\"divisor\",\"dur\",\"edgemode\",\"elevation\",\"end\",\"fill\",\"fill-opacity\",\"fill-rule\",\"filter\",\"filterunits\",\"flood-color\",\"flood-opacity\",\"font-family\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-variant\",\"font-weight\",\"fx\",\"fy\",\"g1\",\"g2\",\"glyph-name\",\"glyphref\",\"gradientunits\",\"gradienttransform\",\"height\",\"href\",\"id\",\"image-rendering\",\"in\",\"in2\",\"k\",\"k1\",\"k2\",\"k3\",\"k4\",\"kerning\",\"keypoints\",\"keysplines\",\"keytimes\",\"lang\",\"lengthadjust\",\"letter-spacing\",\"kernelmatrix\",\"kernelunitlength\",\"lighting-color\",\"local\",\"marker-end\",\"marker-mid\",\"marker-start\",\"markerheight\",\"markerunits\",\"markerwidth\",\"maskcontentunits\",\"maskunits\",\"max\",\"mask\",\"media\",\"method\",\"mode\",\"min\",\"name\",\"numoctaves\",\"offset\",\"operator\",\"opacity\",\"order\",\"orient\",\"orientation\",\"origin\",\"overflow\",\"paint-order\",\"path\",\"pathlength\",\"patterncontentunits\",\"patterntransform\",\"patternunits\",\"points\",\"preservealpha\",\"preserveaspectratio\",\"primitiveunits\",\"r\",\"rx\",\"ry\",\"radius\",\"refx\",\"refy\",\"repeatcount\",\"repeatdur\",\"restart\",\"result\",\"rotate\",\"scale\",\"seed\",\"shape-rendering\",\"specularconstant\",\"specularexponent\",\"spreadmethod\",\"startoffset\",\"stddeviation\",\"stitchtiles\",\"stop-color\",\"stop-opacity\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke\",\"stroke-width\",\"style\",\"surfacescale\",\"systemlanguage\",\"tabindex\",\"targetx\",\"targety\",\"transform\",\"transform-origin\",\"text-anchor\",\"text-decoration\",\"text-rendering\",\"textlength\",\"type\",\"u1\",\"u2\",\"unicode\",\"values\",\"viewbox\",\"visibility\",\"version\",\"vert-adv-y\",\"vert-origin-x\",\"vert-origin-y\",\"width\",\"word-spacing\",\"wrap\",\"writing-mode\",\"xchannelselector\",\"ychannelselector\",\"x\",\"x1\",\"x2\",\"xmlns\",\"y\",\"y1\",\"y2\",\"z\",\"zoomandpan\"]),B=u([\"accent\",\"accentunder\",\"align\",\"bevelled\",\"close\",\"columnsalign\",\"columnlines\",\"columnspan\",\"denomalign\",\"depth\",\"dir\",\"display\",\"displaystyle\",\"encoding\",\"fence\",\"frame\",\"height\",\"href\",\"id\",\"largeop\",\"length\",\"linethickness\",\"lspace\",\"lquote\",\"mathbackground\",\"mathcolor\",\"mathsize\",\"mathvariant\",\"maxsize\",\"minsize\",\"movablelimits\",\"notation\",\"numalign\",\"open\",\"rowalign\",\"rowlines\",\"rowspacing\",\"rowspan\",\"rspace\",\"rquote\",\"scriptlevel\",\"scriptminsize\",\"scriptsizemultiplier\",\"selection\",\"separator\",\"separators\",\"stretchy\",\"subscriptshift\",\"supscriptshift\",\"symmetric\",\"voffset\",\"width\",\"xmlns\"]),j=u([\"xlink:href\",\"xml:id\",\"xlink:title\",\"xml:space\",\"xmlns:xlink\"]),G=m(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm),W=m(/<%[\\w\\W]*|[\\w\\W]*%>/gm),q=m(/\\${[\\w\\W]*}/gm),Y=m(/^data-[\\-\\w.\\u00B7-\\uFFFF]/),$=m(/^aria-[\\-\\w]+$/),K=m(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i),V=m(/^(?:\\w+script|data):/i),J=m(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g),X=m(/^html$/i),Z=function(){return\"undefined\"===typeof window?null:window},Q=function(t,n){if(\"object\"!==e(t)||\"function\"!==typeof t.createPolicy)return null;var r=null;n.currentScript&&n.currentScript.hasAttribute(\"data-tt-policy-suffix\")&&(r=n.currentScript.getAttribute(\"data-tt-policy-suffix\"));var o=\"dompurify\"+(r?\"#\"+r:\"\");try{return t.createPolicy(o,{createHTML:function(e){return e},createScriptURL:function(e){return e}})}catch(a){return console.warn(\"TrustedTypes policy \"+o+\" could not be created.\"),null}};return function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Z(),o=function(e){return t(e)};if(o.version=\"2.4.7\",o.removed=[],!n||!n.document||9!==n.document.nodeType)return o.isSupported=!1,o;var a=n.document,i=n.document,l=n.DocumentFragment,c=n.HTMLTemplateElement,s=n.Node,m=n.Element,f=n.NodeFilter,p=n.NamedNodeMap,d=void 0===p?n.NamedNodeMap||n.MozNamedAttrMap:p,h=n.HTMLFormElement,g=n.DOMParser,k=n.trustedTypes,ee=m.prototype,te=D(ee,\"cloneNode\"),ne=D(ee,\"nextSibling\"),re=D(ee,\"childNodes\"),oe=D(ee,\"parentNode\");if(\"function\"===typeof c){var ae=i.createElement(\"template\");ae.content&&ae.content.ownerDocument&&(i=ae.content.ownerDocument)}var ie=Q(k,a),le=ie?ie.createHTML(\"\"):\"\",ce=i,se=ce.implementation,ue=ce.createNodeIterator,me=ce.createDocumentFragment,fe=ce.getElementsByTagName,pe=a.importNode,de={};try{de=O(i).documentMode?i.documentMode:{}}catch(Lt){}var he={};o.isSupported=\"function\"===typeof oe&&se&&void 0!==se.createHTMLDocument&&9!==de;var ge,ye,be=G,ve=W,Te=q,Ne=Y,Ee=$,Ae=V,we=J,Se=K,_e=null,xe=L({},[].concat(r(R),r(C),r(M),r(F),r(H))),ke=null,Le=L({},[].concat(r(z),r(P),r(B),r(j))),Oe=Object.seal(Object.create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),De=null,Re=null,Ce=!0,Me=!0,Ie=!1,Fe=!0,Ue=!1,He=!1,ze=!1,Pe=!1,Be=!1,je=!1,Ge=!1,We=!0,qe=!1,Ye=!0,$e=!1,Ke={},Ve=null,Je=L({},[\"annotation-xml\",\"audio\",\"colgroup\",\"desc\",\"foreignobject\",\"head\",\"iframe\",\"math\",\"mi\",\"mn\",\"mo\",\"ms\",\"mtext\",\"noembed\",\"noframes\",\"noscript\",\"plaintext\",\"script\",\"style\",\"svg\",\"template\",\"thead\",\"title\",\"video\",\"xmp\"]),Xe=null,Ze=L({},[\"audio\",\"video\",\"img\",\"source\",\"image\",\"track\"]),Qe=null,et=L({},[\"alt\",\"class\",\"for\",\"id\",\"label\",\"name\",\"pattern\",\"placeholder\",\"role\",\"summary\",\"title\",\"value\",\"style\",\"xmlns\"]),tt=\"http://www.w3.org/1998/Math/MathML\",nt=\"http://www.w3.org/2000/svg\",rt=\"http://www.w3.org/1999/xhtml\",ot=rt,at=!1,it=null,lt=L({},[tt,nt,rt],N),ct=[\"application/xhtml+xml\",\"text/html\"],st=null,ut=i.createElement(\"form\"),mt=function(e){return e instanceof RegExp||e instanceof Function},ft=function(t){st&&st===t||(t&&\"object\"===e(t)||(t={}),t=O(t),ge=ge=-1===ct.indexOf(t.PARSER_MEDIA_TYPE)?\"text/html\":t.PARSER_MEDIA_TYPE,ye=\"application/xhtml+xml\"===ge?N:T,_e=\"ALLOWED_TAGS\"in t?L({},t.ALLOWED_TAGS,ye):xe,ke=\"ALLOWED_ATTR\"in t?L({},t.ALLOWED_ATTR,ye):Le,it=\"ALLOWED_NAMESPACES\"in t?L({},t.ALLOWED_NAMESPACES,N):lt,Qe=\"ADD_URI_SAFE_ATTR\"in t?L(O(et),t.ADD_URI_SAFE_ATTR,ye):et,Xe=\"ADD_DATA_URI_TAGS\"in t?L(O(Ze),t.ADD_DATA_URI_TAGS,ye):Ze,Ve=\"FORBID_CONTENTS\"in t?L({},t.FORBID_CONTENTS,ye):Je,De=\"FORBID_TAGS\"in t?L({},t.FORBID_TAGS,ye):{},Re=\"FORBID_ATTR\"in t?L({},t.FORBID_ATTR,ye):{},Ke=\"USE_PROFILES\"in t&&t.USE_PROFILES,Ce=!1!==t.ALLOW_ARIA_ATTR,Me=!1!==t.ALLOW_DATA_ATTR,Ie=t.ALLOW_UNKNOWN_PROTOCOLS||!1,Fe=!1!==t.ALLOW_SELF_CLOSE_IN_ATTR,Ue=t.SAFE_FOR_TEMPLATES||!1,He=t.WHOLE_DOCUMENT||!1,Be=t.RETURN_DOM||!1,je=t.RETURN_DOM_FRAGMENT||!1,Ge=t.RETURN_TRUSTED_TYPE||!1,Pe=t.FORCE_BODY||!1,We=!1!==t.SANITIZE_DOM,qe=t.SANITIZE_NAMED_PROPS||!1,Ye=!1!==t.KEEP_CONTENT,$e=t.IN_PLACE||!1,Se=t.ALLOWED_URI_REGEXP||Se,ot=t.NAMESPACE||rt,Oe=t.CUSTOM_ELEMENT_HANDLING||{},t.CUSTOM_ELEMENT_HANDLING&&mt(t.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(Oe.tagNameCheck=t.CUSTOM_ELEMENT_HANDLING.tagNameCheck),t.CUSTOM_ELEMENT_HANDLING&&mt(t.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(Oe.attributeNameCheck=t.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),t.CUSTOM_ELEMENT_HANDLING&&\"boolean\"===typeof t.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(Oe.allowCustomizedBuiltInElements=t.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),Ue&&(Me=!1),je&&(Be=!0),Ke&&(_e=L({},r(H)),ke=[],!0===Ke.html&&(L(_e,R),L(ke,z)),!0===Ke.svg&&(L(_e,C),L(ke,P),L(ke,j)),!0===Ke.svgFilters&&(L(_e,M),L(ke,P),L(ke,j)),!0===Ke.mathMl&&(L(_e,F),L(ke,B),L(ke,j))),t.ADD_TAGS&&(_e===xe&&(_e=O(_e)),L(_e,t.ADD_TAGS,ye)),t.ADD_ATTR&&(ke===Le&&(ke=O(ke)),L(ke,t.ADD_ATTR,ye)),t.ADD_URI_SAFE_ATTR&&L(Qe,t.ADD_URI_SAFE_ATTR,ye),t.FORBID_CONTENTS&&(Ve===Je&&(Ve=O(Ve)),L(Ve,t.FORBID_CONTENTS,ye)),Ye&&(_e[\"#text\"]=!0),He&&L(_e,[\"html\",\"head\",\"body\"]),_e.table&&(L(_e,[\"tbody\"]),delete De.tbody),u&&u(t),st=t)},pt=L({},[\"mi\",\"mo\",\"mn\",\"ms\",\"mtext\"]),dt=L({},[\"foreignobject\",\"desc\",\"title\",\"annotation-xml\"]),ht=L({},[\"title\",\"style\",\"font\",\"a\",\"script\"]),gt=L({},C);L(gt,M),L(gt,I);var yt=L({},F);L(yt,U);var bt=function(e){v(o.removed,{element:e});try{e.parentNode.removeChild(e)}catch(Lt){try{e.outerHTML=le}catch(Lt){e.remove()}}},vt=function(e,t){try{v(o.removed,{attribute:t.getAttributeNode(e),from:t})}catch(Lt){v(o.removed,{attribute:null,from:t})}if(t.removeAttribute(e),\"is\"===e&&!ke[e])if(Be||je)try{bt(t)}catch(Lt){}else try{t.setAttribute(e,\"\")}catch(Lt){}},Tt=function(e){var t,n;if(Pe)e=\"<remove></remove>\"+e;else{var r=E(e,/^[\\r\\n\\t ]+/);n=r&&r[0]}\"application/xhtml+xml\"===ge&&ot===rt&&(e='<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>'+e+\"</body></html>\");var o=ie?ie.createHTML(e):e;if(ot===rt)try{t=(new g).parseFromString(o,ge)}catch(Lt){}if(!t||!t.documentElement){t=se.createDocument(ot,\"template\",null);try{t.documentElement.innerHTML=at?le:o}catch(Lt){}}var a=t.body||t.documentElement;return e&&n&&a.insertBefore(i.createTextNode(n),a.childNodes[0]||null),ot===rt?fe.call(t,He?\"html\":\"body\")[0]:He?t.documentElement:a},Nt=function(e){return ue.call(e.ownerDocument||e,e,f.SHOW_ELEMENT|f.SHOW_COMMENT|f.SHOW_TEXT,null,!1)},Et=function(t){return\"object\"===e(s)?t instanceof s:t&&\"object\"===e(t)&&\"number\"===typeof t.nodeType&&\"string\"===typeof t.nodeName},At=function(e,t,n){he[e]&&y(he[e],function(e){e.call(o,t,n,st)})},wt=function(e){var t,n;if(At(\"beforeSanitizeElements\",e,null),(n=e)instanceof h&&(\"string\"!==typeof n.nodeName||\"string\"!==typeof n.textContent||\"function\"!==typeof n.removeChild||!(n.attributes instanceof d)||\"function\"!==typeof n.removeAttribute||\"function\"!==typeof n.setAttribute||\"string\"!==typeof n.namespaceURI||\"function\"!==typeof n.insertBefore||\"function\"!==typeof n.hasChildNodes))return bt(e),!0;if(_(/[\\u0080-\\uFFFF]/,e.nodeName))return bt(e),!0;var r=ye(e.nodeName);if(At(\"uponSanitizeElement\",e,{tagName:r,allowedTags:_e}),e.hasChildNodes()&&!Et(e.firstElementChild)&&(!Et(e.content)||!Et(e.content.firstElementChild))&&_(/<[/\\w]/g,e.innerHTML)&&_(/<[/\\w]/g,e.textContent))return bt(e),!0;if(\"select\"===r&&_(/<template/i,e.innerHTML))return bt(e),!0;if(!_e[r]||De[r]){if(!De[r]&&_t(r)){if(Oe.tagNameCheck instanceof RegExp&&_(Oe.tagNameCheck,r))return!1;if(Oe.tagNameCheck instanceof Function&&Oe.tagNameCheck(r))return!1}if(Ye&&!Ve[r]){var a=oe(e)||e.parentNode,i=re(e)||e.childNodes;if(i&&a)for(var l=i.length,c=l-1;c>=0;--c)a.insertBefore(te(i[c],!0),ne(e))}return bt(e),!0}return e instanceof m&&!function(e){var t=oe(e);t&&t.tagName||(t={namespaceURI:ot,tagName:\"template\"});var n=T(e.tagName),r=T(t.tagName);return!!it[e.namespaceURI]&&(e.namespaceURI===nt?t.namespaceURI===rt?\"svg\"===n:t.namespaceURI===tt?\"svg\"===n&&(\"annotation-xml\"===r||pt[r]):Boolean(gt[n]):e.namespaceURI===tt?t.namespaceURI===rt?\"math\"===n:t.namespaceURI===nt?\"math\"===n&&dt[r]:Boolean(yt[n]):e.namespaceURI===rt?!(t.namespaceURI===nt&&!dt[r])&&!(t.namespaceURI===tt&&!pt[r])&&!yt[n]&&(ht[n]||!gt[n]):!(\"application/xhtml+xml\"!==ge||!it[e.namespaceURI]))}(e)?(bt(e),!0):\"noscript\"!==r&&\"noembed\"!==r&&\"noframes\"!==r||!_(/<\\/no(script|embed|frames)/i,e.innerHTML)?(Ue&&3===e.nodeType&&(t=e.textContent,t=A(t,be,\" \"),t=A(t,ve,\" \"),t=A(t,Te,\" \"),e.textContent!==t&&(v(o.removed,{element:e.cloneNode()}),e.textContent=t)),At(\"afterSanitizeElements\",e,null),!1):(bt(e),!0)},St=function(e,t,n){if(We&&(\"id\"===t||\"name\"===t)&&(n in i||n in ut))return!1;if(Me&&!Re[t]&&_(Ne,t));else if(Ce&&_(Ee,t));else if(!ke[t]||Re[t]){if(!(_t(e)&&(Oe.tagNameCheck instanceof RegExp&&_(Oe.tagNameCheck,e)||Oe.tagNameCheck instanceof Function&&Oe.tagNameCheck(e))&&(Oe.attributeNameCheck instanceof RegExp&&_(Oe.attributeNameCheck,t)||Oe.attributeNameCheck instanceof Function&&Oe.attributeNameCheck(t))||\"is\"===t&&Oe.allowCustomizedBuiltInElements&&(Oe.tagNameCheck instanceof RegExp&&_(Oe.tagNameCheck,n)||Oe.tagNameCheck instanceof Function&&Oe.tagNameCheck(n))))return!1}else if(Qe[t]);else if(_(Se,A(n,we,\"\")));else if(\"src\"!==t&&\"xlink:href\"!==t&&\"href\"!==t||\"script\"===e||0!==w(n,\"data:\")||!Xe[e])if(Ie&&!_(Ae,A(n,we,\"\")));else if(n)return!1;return!0},_t=function(e){return e.indexOf(\"-\")>0},xt=function(t){var n,r,a,i;At(\"beforeSanitizeAttributes\",t,null);var l=t.attributes;if(l){var c={attrName:\"\",attrValue:\"\",keepAttr:!0,allowedAttributes:ke};for(i=l.length;i--;){var s=n=l[i],u=s.name,m=s.namespaceURI;if(r=\"value\"===u?n.value:S(n.value),a=ye(u),c.attrName=a,c.attrValue=r,c.keepAttr=!0,c.forceKeepAttr=void 0,At(\"uponSanitizeAttribute\",t,c),r=c.attrValue,!c.forceKeepAttr&&(vt(u,t),c.keepAttr))if(Fe||!_(/\\/>/i,r)){Ue&&(r=A(r,be,\" \"),r=A(r,ve,\" \"),r=A(r,Te,\" \"));var f=ye(t.nodeName);if(St(f,a,r)){if(!qe||\"id\"!==a&&\"name\"!==a||(vt(u,t),r=\"user-content-\"+r),ie&&\"object\"===e(k)&&\"function\"===typeof k.getAttributeType)if(m);else switch(k.getAttributeType(f,a)){case\"TrustedHTML\":r=ie.createHTML(r);break;case\"TrustedScriptURL\":r=ie.createScriptURL(r)}try{m?t.setAttributeNS(m,u,r):t.setAttribute(u,r),b(o.removed)}catch(Lt){}}}else vt(u,t)}At(\"afterSanitizeAttributes\",t,null)}},kt=function e(t){var n,r=Nt(t);for(At(\"beforeSanitizeShadowDOM\",t,null);n=r.nextNode();)At(\"uponSanitizeShadowNode\",n,null),wt(n)||(n.content instanceof l&&e(n.content),xt(n));At(\"afterSanitizeShadowDOM\",t,null)};return o.sanitize=function(t){var r,i,c,u,m,f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if((at=!t)&&(t=\"\\x3c!--\\x3e\"),\"string\"!==typeof t&&!Et(t)){if(\"function\"!==typeof t.toString)throw x(\"toString is not a function\");if(\"string\"!==typeof(t=t.toString()))throw x(\"dirty is not a string, aborting\")}if(!o.isSupported){if(\"object\"===e(n.toStaticHTML)||\"function\"===typeof n.toStaticHTML){if(\"string\"===typeof t)return n.toStaticHTML(t);if(Et(t))return n.toStaticHTML(t.outerHTML)}return t}if(ze||ft(f),o.removed=[],\"string\"===typeof t&&($e=!1),$e){if(t.nodeName){var p=ye(t.nodeName);if(!_e[p]||De[p])throw x(\"root node is forbidden and cannot be sanitized in-place\")}}else if(t instanceof s)r=Tt(\"\\x3c!----\\x3e\"),1===(i=r.ownerDocument.importNode(t,!0)).nodeType&&\"BODY\"===i.nodeName?r=i:\"HTML\"===i.nodeName?r=i:r.appendChild(i);else{if(!Be&&!Ue&&!He&&-1===t.indexOf(\"<\"))return ie&&Ge?ie.createHTML(t):t;if(!(r=Tt(t)))return Be?null:Ge?le:\"\"}r&&Pe&&bt(r.firstChild);for(var d=Nt($e?t:r);c=d.nextNode();)3===c.nodeType&&c===u||wt(c)||(c.content instanceof l&&kt(c.content),xt(c),u=c);if(u=null,$e)return t;if(Be){if(je)for(m=me.call(r.ownerDocument);r.firstChild;)m.appendChild(r.firstChild);else m=r;return(ke.shadowroot||ke.shadowrootmod)&&(m=pe.call(a,m,!0)),m}var h=He?r.outerHTML:r.innerHTML;return He&&_e[\"!doctype\"]&&r.ownerDocument&&r.ownerDocument.doctype&&r.ownerDocument.doctype.name&&_(X,r.ownerDocument.doctype.name)&&(h=\"<!DOCTYPE \"+r.ownerDocument.doctype.name+\">\\n\"+h),Ue&&(h=A(h,be,\" \"),h=A(h,ve,\" \"),h=A(h,Te,\" \")),ie&&Ge?ie.createHTML(h):h},o.setConfig=function(e){ft(e),ze=!0},o.clearConfig=function(){st=null,ze=!1},o.isValidAttribute=function(e,t,n){st||ft({});var r=ye(e),o=ye(t);return St(r,o,n)},o.addHook=function(e,t){\"function\"===typeof t&&(he[e]=he[e]||[],v(he[e],t))},o.removeHook=function(e){if(he[e])return b(he[e])},o.removeHooks=function(e){he[e]&&(he[e]=[])},o.removeAllHooks=function(){he={}},o}()}()}}]);","extractedComments":[]}